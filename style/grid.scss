/*=============================================================================
	UTILS
=============================================================================*/

@mixin topLeft {
	position: absolute;
	top: 0px;
	left: 0px;
}

@mixin hundredPercent {
	width: 100%;
	height: 100%;
}

@mixin centeredAbsolute($width, $height){
	position: absolute;
	top: 50%;
	left: 50%;
	width: $width;
	height: $height;
	margin-top: -$height/2;
	margin-left: -$width/2;
}

/*same as above, but can be used with percentages*/
@mixin centeredAbsoluteTransform($width, $height){
	position: absolute;
	top: 50%;
	left: 50%;
	width: $width;
	height: $height;
	transform: translate(-50%, -50%);
	-webkit-transform: translate(-50%, -50%);
	transform-origin: 50% 50%;
	-webkit-transform-origin: 50% 50%;
}

@mixin OnTopOfPieces {
	z-index: 10004;
}

@mixin OnTopOfEverything {
	z-index: 10005;
}

@mixin opacityTransition {
	transition: opacity .2s;
	-webkit-transition: opacity .2s;
}

$buttonImageSize : 51px;

@mixin buttonImage {
	@include respond-to(small){
		$smallButtonSize : 51px;
		background-size: $smallButtonSize $smallButtonSize;
		width: $smallButtonSize;
		height: $smallButtonSize;
	}
	@include respond-to(medium){
		$mediumButtonSize : 70px;
		background-size: $mediumButtonSize $mediumButtonSize;
		width: $mediumButtonSize;
		height: $mediumButtonSize;
	}
	@include respond-to(large){
		$largeButtonSize : 100px;
		background-size: $largeButtonSize $largeButtonSize;
		width: $largeButtonSize;
		height: $largeButtonSize;
	}
	background-position: 50% 50%;
	background-repeat: no-repeat;
	image-rendering: optimizeSpeed;             
	image-rendering: -moz-crisp-edges;          
	image-rendering: -o-crisp-edges;           
	image-rendering: -webkit-optimize-contrast;
	image-rendering: optimize-contrast; 
}

/*=============================================================================
	COLORS
=============================================================================*/

$blue: #02ACEE;
$red: #EE1B21;
$yellow: #F46E1E;
$green : #00A550;
$purple : #605EC2;
$pink : #ed0189;
$black : #212122;
$white : #fffffd;
$offWhite : #ebebea;
$offBlack : #414141;
$gray : #a0a0a0;
$screenBackground : #d9d9d9;

$seafoam : #00CC9D;

$colorValues : #02ACEE #EE1B21 #F46E1E #00A550 #605EC2 #ed0189;
$colorStrings : blue    red     yellow  green   purple  pink;


@function colorStringToValue($color) {
	@return nth($colorValues, index($colorStrings, $color));
}

$tileSize : 35px;

/*=============================================================================
	FONTS
=============================================================================*/

@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 100;
  src: url("./Fonts/Lato-Hairline.ttf") format('truetype');
}
@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 400;
  src: url("./Fonts/Lato-Regular.ttf") format('truetype');
}

@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 300;
  src: url("./Fonts/Lato-Light.ttf") format('truetype');
}

@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 700;
  src: url("./Fonts/Lato-Bold.ttf") format('truetype');
}

$font-family : 'Lato', sans-serif;

@mixin reflection($top){
	-webkit-box-reflect: below $top -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(50%, transparent), to(rgba(255, 255, 255, 0.3)))
}

@mixin tinyFont {
	font-family: $font-family;
	font-weight: 700;
	letter-spacing: .1em;
	@include respond-to(small){
		font-size: 10px;
		line-height: 10px;
	}
	@include respond-to(medium){
		font-size: 12px;
		line-height: 14px;
	}
	@include respond-to(large){
		font-size: 16px;
		line-height: 18px;
	}
}

@mixin smallFont {
	font-family: $font-family;
	font-size: 8pt;
	font-weight: 700;
}

@mixin mediumFont {
	font-family: $font-family;
	font-weight: 400;
	letter-spacing: .15em;
	@include respond-to(small){
		font-size: 18pt;
		line-height: 28px;
	}
	@include respond-to(medium){
		font-size: 20pt;
		line-height: 32px;
	}
	@include respond-to(large){
		font-size: 24pt;
		line-height: 40px;
	}
}

@mixin mediumFontFontAwesome {
	@include respond-to(small){
		font-size: 18pt;
		line-height: 28px;
	}
	@include respond-to(medium){
		font-size: 20pt;
		line-height: 32px;
	}
	@include respond-to(large){
		font-size: 43pt;
		line-height: inherit;
	}
}

@mixin mediumSmallFont {
	font-family: $font-family;
	font-weight: 400;
	letter-spacing: .1em;
	@include respond-to(small){
		font-size: 14px;
		line-height: 16px;
	}
	@include respond-to(medium){
		font-size: 16px;
		line-height: 18px;
	}
	@include respond-to(large){
		font-size: 20px;
		line-height: 22px;
	}
}


@mixin bigFont {
	font-family: $font-family;
	font-weight: 400;
	letter-spacing: .2em;
	@include respond-to(small){
		font-size: 36px;
		line-height: 42px;
	}
	@include respond-to(medium){
		font-size: 50px;
		line-height: 60px;
	}
	@include respond-to(large){
		font-size: 62px;
		line-height: 72px;
	}
}

@mixin biggerFont {
	font-family: $font-family;
	font-size: 32pt;
	letter-spacing: 0.1em;
	font-weight: 400;
}

@mixin biggestFont {
	font-family: $font-family;
	letter-spacing: 0.1em;
	font-weight: 100;
	@include respond-to(small){
		font-size: 80px;
		line-height: 85px;
	}
	@include respond-to(medium){
		font-size: 130px;
		line-height: 140px;
	}
	@include respond-to(large){
		font-size: 190px;
		line-height: 195px;
	}
}

@mixin smallThinFont {
	font-family: $font-family;
	font-size: 12pt;
	font-weight: 300;
}

$gradientBackgroundAnimation : noiseSlide 3s steps(60) infinite;

$noiseBackgroundImageSize : 1068px;

@mixin gradientBackground($color) {
	background: linear-gradient(
		rgba($white, 0), 
		rgba($color, 1)
	), url("../assets/images/backgrounds/checker.png");
}

@mixin checkerBackground {
	background: url("../assets/images/backgrounds/checker.png"); 
}

@mixin noiseBackground {
	background: url("../assets/images/backgrounds/noise3.png"); 
	background-size: $noiseBackgroundImageSize $noiseBackgroundImageSize;
	animation: $gradientBackgroundAnimation;
	-webkit-animation: $gradientBackgroundAnimation;
}

@keyframes noiseSlide {
	from {background-position: 0px;}
	to {background-position: 0px 0px;}
}

@-webkit-keyframes noiseSlide {
	from {background-position: 0px;}
	to {background-position: $noiseBackgroundImageSize $noiseBackgroundImageSize;}
}

@mixin forwardButtonBack {
	-webkit-transform: rotate(180deg); 
	-moz-transform: rotate(180deg);  
	-ms-transform: rotate(180deg);  
	-o-transform: rotate(180deg);  
	transform: rotate(180deg);  
	background: url("../assets/images/icons/forward.png");	
	@include buttonImage;
}

@mixin forwardButtonBackWhite {
	-webkit-transform: rotate(180deg); 
	-moz-transform: rotate(180deg);  
	-ms-transform: rotate(180deg);  
	-o-transform: rotate(180deg);  
	transform: rotate(180deg);  
	background: url("../assets/images/icons/forward_white.png");	
	@include buttonImage;
}

/*=============================================================================
SCREEN
=============================================================================*/
$screenWidth : 320px;
$iphoneWidth : 320px;
/*$screenHeight : 568px;*/
$iphone5Height : 568px;
$iphone4Height : 480px;
$iphone4HeightWeb : 440px;
$iphone5HeightWeb : 528px;

/*(min-width: 700px) and (orientation: landscape)*/

@mixin respond-to($media) {
	@if $media == iphone4Web {
		@media (max-height : $iphone4HeightWeb) { @content; }
	}
	@else if $media == iphone4 {
		@media (min-height: $iphone4HeightWeb) and (max-height : $iphone5HeightWeb - 1) { @content; }
	}
	@else if $media == iphone5Web {
		@media (min-height: $iphone5HeightWeb) and (max-height: $iphone5Height - 1) { @content; }
	}
	@else if $media == iphone5 {
		@media (min-height: $iphone5HeightWeb) { @content; }
	}
	@else if $media == small {
		@media (max-width : 480px) { @content; }
	}
	@else if $media == medium {
		@media (min-width : 481px) and (max-width : 640px) { @content; }
	}
	@else if $media == large {
		@media (min-width : 640px) { @content; }
	}
	@else if $media == short {
		@media (max-height: $iphone5Height - 1) { @content; }
	}
	@else if $media == squat {
		@media screen and (min-aspect-ratio: 640/1024) { @content; }
	}
}

@mixin backgroundImage ($lowRes, $highRes) {
	@include respond-to(small){
		background: url($lowRes);
	}
	@include respond-to(large){
		background: url($highRes);
	}
}

@mixin screenHeight{
	height: 100%;
	min-height: 440px;
	max-height: 1900px;
}

@mixin screenWidth{
	width: 100%;
	max-width: 1200px;
	min-width: 320px;
}

#TopSolidColorBackground {
	background-color: rgb(252, 242, 1);
	width: 100%;
	height: 50%;
	position: absolute;
	top: 0px;
	left: 0px;
	z-index: -1;
}
#BottomSolidColorBackground {
	background-color: rgb(1, 174, 238);
	width: 100%;
	height: 50%;
	position: absolute;
	bottom: 0px;
	left: 0px;
	z-index: -1;
}

#Shell {
	@include centeredAbsoluteTransform(100%, 100%);
	@include screenHeight;
	background : url("../assets/images/splash/splash_gradient_thin.png");
	background-repeat: repeat-x;
	background-size : 100% 100%;
}

.screen {
	@include centeredAbsoluteTransform(100%, 100%);
	@include screenWidth;
	@include screenHeight;
	overflow: hidden;
	display: none;
	/*@include respond-to(iphone4Web){
		height : $iphone4Height;
		$TinyScreenTransform : scale(1, 0.91) translate(0px, -20px);
		-webkit-transform: $TinyScreenTransform;
		-moz-transform: $TinyScreenTransform;
		-ms-transform: $TinyScreenTransform;
		-o-transform: $TinyScreenTransform;
		transform: $TinyScreenTransform;
	}
	@include respond-to(iphone5Web){
		height : $iphone5Height;
		$TinyScreenTransform : scale(1, 0.95) translate(0px, -22px);
		-webkit-transform: $TinyScreenTransform;
		-moz-transform: $TinyScreenTransform;
		-ms-transform: $TinyScreenTransform;
		-o-transform: $TinyScreenTransform;
		transform: $TinyScreenTransform;	
	}*/
}


.screen.visible {
	@include screenWidth;
	@include screenHeight;
	overflow: hidden;
	display: block;
}


/*=============================================================================
	BUTTONS
=============================================================================*/

$buttonMargin : 10px;
$buttonWidth : $screenWidth - $buttonMargin * 2;
$buttonHeight : 60px;

.Button {
	width: $buttonWidth;
	height: $buttonHeight;
	cursor: pointer;
	color: $white;
	background-color: transparent;
}

.Button.active {
	opacity: .1;
}

.ButtonTextContainer {
	width: 100%;
	height: 100%;
	line-height: $buttonHeight;
	text-align: center;
	vertical-align: middle;
}


/*=============================================================================
	ANIMS
=============================================================================*/

$buttonPositionTransitionFast : .20s ease-out;
$buttonPositionTransitionSlow : .25s ease-out;


.menuClosed {
	transform: translate3d(-50%, -50%, 0px);
	-webkit-transform: translate3d(-50%, -50%, 0px);
	transition: opacity .2s, -webkit-transform $buttonPositionTransitionSlow;
	-webkit-transition: opacity .2s, -webkit-transform $buttonPositionTransitionSlow;
}

.menuOpen {
	transform: translate3d(-130%, -50%, 0px);
	-webkit-transform: translate3d(-130%, -50%, 0px);
	transition: opacity .2s, -webkit-transform $buttonPositionTransitionSlow;
	-webkit-transition: opacity .2s, -webkit-transform $buttonPositionTransitionSlow;
}