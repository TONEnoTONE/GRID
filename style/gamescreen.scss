[draggable] {
  -moz-user-select: none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  user-select: none;
  /* Required to make elements draggable in old WebKit */
  -khtml-user-drag: element;
  -webkit-user-drag: element;
}

#GameScreen {
	/*background-color: $screenBackground;*/
	opacity: 0;
	@include checkerBackground;
}

@each $color in $colorStrings {
	.#{$color} #GameScreen{
		@include gradientBackground(colorStringToValue($color));
	}
}

$gameScreenButtonSize : $tileSize * 2;
$GameScreeenElementMargin : 9px;

$GameScreenMargin : 6%;

/*=============================================================================
	BOARD
=============================================================================*/

@mixin tileWidth {
	/* (100% - 6%*2) / 8*/
	width: 11%;
}

$tileSizePercent : 11%;
$pieceSelectionHeight : $tileSizePercent * 2.5;

#PrototypeTile {
	@include tileWidth;
	z-index: -1;
	height: 1px;
	position: absolute;
	top: 0px;
	left: 0px;
}

#BoardView {
	position: absolute;
	left: $GameScreenMargin;
}

#BoardView #TileCanvas{
	position: absolute;
	z-index: 1001;
	width: calc(100% + 10px);
	height: calc(100% + 10px);
	left: -5px;
	top: -5px;
}


#BoardView #BackgroundColor{
	position: absolute;
	top: -$GameScreenMargin / 2;
	left: -$GameScreenMargin / 2;
	width: 100% + $GameScreenMargin;
	height: 100% + $GameScreenMargin;
	background-color: $offWhite;
}

#BoardView .TileView {
	@include topLeft;
	width: $tileSize;
	height: $tileSize;
	pointer-events: none;
	opacity: 0;
}

#BoardView .TileView #highlight {
	@include topLeft;
	@include hundredPercent;
}

@each $color in $colorStrings {
	#BoardView .TileView #highlight.#{$color} {
		background-color: colorStringToValue($color);
	}
}

/*=============================================================================
	PIECE SELECTION
=============================================================================*/

#PieceSelection {
	position: absolute;
	right : -$GameScreenMargin / 2;
	width: 6.5 * $tileSizePercent;
	height: $tileSizePercent * 2.5;
	background-color: $offWhite;
	top: 100% + $GameScreenMargin;

}

#PieceSelection .PieceView{
	position: relative;
	float: left;
}

/*=============================================================================
	WALLS
=============================================================================*/

#BoardView .WallView {
	position: absolute;
	background-color: $black;
	top: 0px;
	left: 0px;
	z-index: 1000;
	/*transform : translate3d(0, 0, 0);
	-webkit-transform : translate3d(0, 0, 0);*/
	/*@include opacityTransition;*/
	opacity: 1;
}

#BoardView .WallView.Visible {
	transition: opacity .2s;
	-webkit-transition: opacity .2s;
	opacity: 1!important;
}

#BoardView .WallView.Hit {
	z-index: 1002;
	border-radius: 5px;
	opacity: 0;
}

$WallViewHitMargin : -2px;

#BoardView .WallView.Hit.vertical {
	width: 5px;
	margin-left: -2px;
	height: calc(100% / 8);
	margin-top: calc(-100% / 16);
	opacity: 0;
}

#BoardView .WallView.Hit.horizontal {
	height: 5px;
	margin-top: -2px;
	width: calc(100% / 8);
	margin-left: calc(-100% / 16);
	opacity: 0;
}


#BoardView .WallView.horizontal {
	height: 2px;
	width: calc(100% / 8);
	margin-left: calc(-100% / 16);
}

#BoardView .WallView.vertical {
	width: 2px;
	height: calc(100% / 8);
	margin-top: calc(-100% / 16);
}

@each $color in $colorStrings {
	#BoardView .WallView.#{$color} {
		background-color: colorStringToValue($color);
	}
}

/*=============================================================================
	COLLISION
=============================================================================*/

#BoardView .CollisionView {
	position: absolute;
	/*background: url("../assets/images/icons/error.png");*/
	@include buttonImage;
	top: 0px;
	left: 0px;
	margin-top: -($buttonImageSize - $tileSize) / 2;
	margin-left: -($buttonImageSize - $tileSize) / 2;
	z-index: 10004;
	opacity: 0;
}

#BoardView .CollisionView i{
	@include topLeft;
	@include hundredPercent;
	color: $red;
	font-size: $buttonImageSize;
	text-align: center;
	text-shadow: $black 1px 1px 5px;
}

/*=============================================================================
	PIECE
=============================================================================*/

$PieceViewMargin : 3px;

.PieceView {
	@include topLeft;
	cursor: pointer;
	margin-top: -$PieceViewMargin;
	margin-left: -$PieceViewMargin;
	width: $tileSize  + 2 * $PieceViewMargin;
	height: $tileSize + 2 * $PieceViewMargin;
	transform : translate3d(0, 0, 0);
	-webkit-transform : translate3d(0, 0, 0);
	z-index: 10003;
	background : none;
}

.PieceView.playing {
	pointer-events : none;
	cursor: default;
}

#PieceViewCanvas{
	transform : rotate(0deg);
	-webkit-transform : rotate(0deg);
	position: absolute;
	top: $PieceViewMargin;
	left: $PieceViewMargin;
	width: $tileSize;
	height: $tileSize;
	opacity: 0;
}

$PieceViewCanvasMargin : 3px;
$PieceViewCanvasSize : $tileSize - $PieceViewCanvasMargin * 2;

@mixin PieceViewCanvasPosition {
	
}

@each $color in $colorStrings {
	#PieceViewCanvas.#{$color} {
		background : url("../assets/images/piece/#{$color}.png");
		background-size:  $PieceViewCanvasSize;
		background-position: $PieceViewCanvasMargin $PieceViewCanvasMargin;
	}
}

$PieceViewActiveSize : 105px;
$PieceViewActiveMargin : ($PieceViewActiveSize  - $tileSize )/ 2;

.PieceView.active{
	background : url("../assets/images/pieceSelection/move.png");
	background-size: $PieceViewActiveSize $PieceViewActiveSize;	
	width: $PieceViewActiveSize;
	height: $PieceViewActiveSize;
	margin-top: -$PieceViewActiveMargin;
	margin-left: -$PieceViewActiveMargin;
	z-index: 1000000;
}

.PieceView.active #PieceViewCanvas{
	transform : rotate(0deg);
	-webkit-transform : rotate(0deg);
	position: absolute;
	top: $PieceViewActiveMargin;
	left: $PieceViewActiveMargin;
	width: $tileSize;
	height: $tileSize;
}

.PieceView.rotatable{
	background : url("../assets/images/pieceSelection/rotate.png");
	background-size: $PieceViewActiveSize $PieceViewActiveSize;	
	width: $PieceViewActiveSize;
	height: $PieceViewActiveSize;
	margin-top: -$PieceViewActiveMargin;
	margin-left: -$PieceViewActiveMargin;
	z-index: 1000000;
}

.PieceView.rotatable #PieceViewCanvas{
	transform : rotate(0deg);
	-webkit-transform : rotate(0deg);
	position: absolute;
	top: $PieceViewActiveMargin;
	left: $PieceViewActiveMargin;
	width: $tileSize;
	height: $tileSize;
}

/*=============================================================================
	PLAY BUTTON
=============================================================================*/

/* the play button */
#GameScreen #PlayButton {
	position: absolute;
	left: 15px;
	bottom: 18px;
	@include buttonImage;
	@include OnTopOfPieces;
	cursor: pointer;
	opacity: 1;
	transition: opacity .3s;
	-webkit-transition: opacity .3s;
}

#GameScreen #PlayButton.faded {
	opacity: .1;
	@include opacityTransition;
	pointer-events : none;
}

#GameScreen #PlayButton.faded.playing {
	opacity: .1;
	@include opacityTransition;
	pointer-events : none;
}

#GameScreen #GameScreenBlocker {
	@include topLeft;
	@include hundredPercent;
	@include OnTopOfPieces;
	display: none;
	background-color: transparent;
}

#GameScreen #GameScreenBlocker.block {
	display: block!important;	
}

#GameScreen #PlayButton.stopped {
	background-image : url("../assets/images/icons/play.png");
}

#GameScreen #PlayButton.stopped.active {
	background-image : url("../assets/images/icons/play_white.png");
}

#GameScreen #PlayButton.stopped.FreePlay:after {
	position: absolute;
	content : "play + store";
	width: 53px;
	@include tinyFont;
	top: 51px;
	left: 0px;
}

$PlayButtonRecordCircleSize : 25px;

#GameScreen #PlayButton.stopped.FreePlay {
	background-image : url("../assets/images/icons/record.png");
}

#GameScreen #PlayButton.stopped.FreePlay.active {
	background-image : url("../assets/images/icons/record_white.png");
}

#GameScreen #PlayButton.playing {
	background-image : url("../assets/images/icons/stop.png");
}

#GameScreen #PlayButton.playing.active {
	background-image : url("../assets/images/icons/stop_white.png");
}

#GameScreen #PlayButton.retry {
	background-image : url("../assets/images/icons/redo.png");
}

#GameScreen #PlayButton.retry.active {
	background-image : url("../assets/images/icons/redo_white.png");
}

/*=============================================================================
	PATTERN
=============================================================================*/

$patternDisplayHeight : $tileSize * 1.5;

$patternDisplayHeight5 : 90px;
$patternDisplayHeight4 : 54px;

@mixin patternDisplayHeight {
	@include respond-to(iphone4) {
		height: $patternDisplayHeight4;
	}
	@include respond-to(iphone5) {
		height: $patternDisplayHeight5;
	}
}

@mixin patternNoteHeight {
	@include respond-to(iphone4) {
		height: $patternDisplayHeight4 / 6;
	}
	@include respond-to(iphone5) {
		height: $patternDisplayHeight5 / 6;
	}
}

#PatternDisplay {
	height: 13%;
	min-height: 30px;
	max-height: 200px;
	position: absolute;
	overflow: visible;
	left: $GameScreenMargin / 2;
	width: 100% - $GameScreenMargin;
	@include respond-to(small) {
		top: $TopNavSmallHeight;
	}
	@include respond-to(medium) {
		top: $TopNavMediumHeight;
	}
	@include respond-to(large) {
		top: $TopNavLargeHeight;
	}
}

$patternNoteMargin : 5px;

#PatternDisplay .PatternBeatView {
	width: 100%;
	height: 100%;
	float: left;
	position: relative;
}

#PatternDisplay .PatternBeatView * {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	z-index: 1;
}

#PatternDisplay .PatternBeatView .rest{
	position: absolute;
	top: 0px;
	height: 100%;
	width: 100%;
	background-color : transparent;
	opacity: 1;
	z-index: 0;
}

#PatternDisplay .PatternBeatView .rest .restFlash{
	top: 0px;
	left: 0px;
	width: 100%;
	height: 100%;
	position: absolute;
	background-color: $white;
	opacity: 0;
}

#PatternDisplay .PatternBeatView .rested .restFlash{
	background-color: #333;
}

#PatternDisplay .PatternBeatView .rested{
	background-color: $white;
}

#PatternDisplay .PatternNoteView {
	height: calc(100%/6);
	width: 100%;
	position: relative;
	opacity: 1;
	background-color: transparent;
	border: solid 1px transparent;
}

#PatternDisplay .PatternNoteView .fill {
	@include topLeft;
	width: 100%;
	height: 100%;
	border: 0px;
	background-color: $gray;
}


#PatternDisplay .PatternNoteView .filled {
	@include respond-to(iphone4) {
		border: 2px solid;
	}
	@include respond-to(iphone5) {
		border: 3px solid;
	}
}

#PatternDisplay .PatternNoteView .bordered {
	@include respond-to(iphone4) {
		border: 2px solid;
	}
	@include respond-to(iphone5) {
		border: 3px solid;
	}
}

@each $color in $colorStrings {
	#PatternDisplay .PatternNoteView.#{$color} .filled{	
		background-color: colorStringToValue($color);
		border-color: $gray;
	}

	#PatternDisplay .PatternNoteView.#{$color} .bordered{
		border-color: colorStringToValue($color);
		background-color: lighten($gray, 10%);
	}

	.NoTrainingWheels #PatternDisplay .PatternNoteView.#{$color} .bordered{
		border-width: 0px;
		background-color: colorStringToValue($color);
		/*background-color: lighten($gray, 10%);*/
	}

	#PatternDisplay .PatternNoteView.#{$color} .bordered.filled{
		border: 0px;
		background-color: colorStringToValue($color);
	}

	#PatternDisplay .PatternNoteView.#{$color} .flash {
		@include topLeft;
		width: 100%;
		height: 100%;
		border: 0px;
		opacity: 0;
		background-color: lighten(colorStringToValue($color), 25%);
		z-index: 100000;
	}
}

/*=============================================================================
	TOP BAR
=============================================================================*/

@mixin GamescreenTopBarHeight {
	@include respond-to(iphone4) {
		height: 40px;
		line-height: 30px;
	}
	@include respond-to(iphone5) {
		height: 51px;
		line-height: 33px;
	}
}

#GameScreen #TopNav {
	position: absolute;
}

#GameScreen #TopNav.visible {
	opacity: 1;
	@include opacityTransition;
}

#GameScreen #TopNav #Progress {
	position: absolute;
	width: 100px;
	left: 11%;
	top: 15%;
	@include tinyFont;
	text-align: left;
	color: $gray;
}

@each $color in $colorStrings {
	.#{$color} #GameScreen #TopNav #SongName{
		position: absolute;
		width: 100%;
		height: 20px;
		left: 0px;
		text-align: center;
		@include tinyFont;
		color: colorStringToValue($color);
		@include respond-to(small) {
			margin-top: 26px;
		}
		@include respond-to(medium) {
			margin-top: 32px;
		}
		@include respond-to(large) {
			margin-top: 42px;
		}
	}
}

#GameScreen #TopNav #Moves {
	position: absolute;
	width: 100%;
	left: 0px;
	height: 30px;
	text-align: center;
	@include mediumFont;
	font-weight: 300;
	color: $black;
	opacity: 0;
	@include respond-to(iphone4) {
		margin-top: -3px;
	}
	@include opacityTransition;
}

#GameScreen #TopNav #Moves.Warning {
	color: $red;
}

#GameScreen #TutorialQuestionMark {
	position: absolute;
	color: $seafoam;
	/*@include GamescreenTopBarHeight;*/
	right: 10px;
	width: 30px;
	height: 30px;
	font-size: 30px;
	margin-top: 0px;
	cursor: pointer;
	text-align: center;
}

#GameScreen #TutorialQuestionMark .ButtonTextContainer {
	@include topLeft;
}

#GameScreen #TutorialQuestionMark:active {
	color: $white;
}

#GameScreen #TopNav #Moves.visible {
	opacity: 1;
	@include opacityTransition;
}

#GameScreen #TopNav #Moves.perfect {
	line-height: 14px;
	font-size: 50px;
}

#GameScreen #TopNav #Moves.perfect:after {
	position: absolute;
	content: "remix";
	@include tinyFont;
	top: 22px;
	left: 0px;
	text-align: center;
	width: 100%;
}
